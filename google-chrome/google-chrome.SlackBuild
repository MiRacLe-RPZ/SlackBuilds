#!/bin/sh

# Copyright 2009-2010  Erik Hanson, Minneapolis, MN, USA
# Copyright 2011  Patrick J. Volkerding, Sebeka, MN, USA
# Copyright 2012-2020  MiRacLe.RPZ
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=google-chrome
PKGNAM=${PKGNAM:-$(basename $0 .SlackBuild)}

if [ "x${VERSION}" == "x" ]; then

  INFOFILE="$(pwd)/${PKGNAM}.info"
  if [ -f $INFOFILE ]; then
    source $INFOFILE
  fi
fi

RELEASE=${RELEASE:-stable}    # stable, beta, or unstable
VERSION=${VERSION:-86.0.4240.75}
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}



case "$(uname -m)" in
  x86_64) DEBARCH="amd64" ; LIBDIRSUFFIX="64" ; ARCH=x86_64 ;;
  *) echo "Package for $(uname -m) architecture is not available." ; exit 1 ;;
esac

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}


SRCURL=${DOWNLOAD:-https://dl.google.com/linux/deb/pool/main/g/${PRGNAM}-${RELEASE}/${PRGNAM}-${RELEASE}_${VERSION}-1_amd64.deb}
SOURCE="${CWD}/$(basename $SRCURL)"

dnl() {
    SOURCE=$1
    SRCURL=$2
    if [ ! -e $SOURCE ]; then
       if ! [ "x${SRCURL}" == "x" ]; then
         echo "Downloading '$(basename ${SOURCE})'."
         wget --no-check-certificate -nv -T 30 -O "${SOURCE}" "${SRCURL}" || true
         if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
            echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
            mv -f "${SOURCE}" "${SOURCE}.FAIL"
            exit 1
         fi
         else
             echo "File '${SOURCE}' not available... aborting the build."
             exit 1
         fi
    fi
}

dnl "${SOURCE}" "${SRCURL}"

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $PKG
ar p ${SOURCE} data.tar.xz | tar xJv || exit 1
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

# Make sure top-level perms are correct:
chmod 0755 .
# This needs to be setuid root:
chmod 4711 opt/google/chrome/chrome-sandbox
# The cron job is for Debian/Ubuntu only:
rm -rf etc

# Link to the standard Mozilla library names:
sed -i 's,libnss3.so.1d,libnss3.so\x00\x00\x00,g;
        s,libnssutil3.so.1d,libnssutil3.so\x00\x00\x00,g;
        s,libsmime3.so.1d,libsmime3.so\x00\x00\x00,g;
        s,libssl3.so.1d,libssl3.so\x00\x00\x00,g;
        s,libplds4.so.0d,libplds4.so\x00\x00\x00,g;
        s,libplc4.so.0d,libplc4.so\x00\x00\x00,g;
        s,libnspr4.so.0d,libnspr4.so\x00\x00\x00,g;' opt/google/chrome/chrome

# --mandir=/usr/man:
mv $PKG/usr/share/man $PKG/usr/man
# Compress manual pages:
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do
  ln -s $( readlink $i ).gz $i.gz
  rm $i
done

# Install a .desktop launcher:
sed -i -e "s#Icon=google-chrome#Icon=/opt/google/chrome/product_logo_256.png#" \
  $PKG/usr/share/applications/google-chrome.desktop

mkdir -p $PKG/install
cp -a $CWD/slack-* $CWD/doinst.sh \
  $PKG/install

mkdir -p $PKG/usr/share/doc/google-chrome/SlackBuild
cp -a $CWD/$PKGNAM.SlackBuild $CWD/google-chrome-updater $CWD/slack-* $CWD/doinst.sh \
  $PKG/usr/share/doc/google-chrome/SlackBuild

mkdir -p $PKG/etc/cron.daily
cp $CWD/google-chrome-updater $PKG/etc/cron.daily/google-chrome-updater.new


cd $PKG

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE

