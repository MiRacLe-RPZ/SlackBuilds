#!/bin/sh

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

PRGNAM=azuredatastudio
PKGNAM=${PRGNAM}

INFOFILE="${CWD}/${PKGNAM}.info"
if [ -f $INFOFILE ]; then
    source $INFOFILE
fi

VERSION=${VERSION:-1.20.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

case $ARCH in
    x86_64) SRCSUFFIX="-x64" ;;
    *) SRCSUFFIX="-${ARCH}" ;;
esac


CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}


SRCURL=${DOWNLOAD:-https://sqlopsbuilds.azureedge.net/stable/fe6312306647441b30102a64bb43abb06ebcf2be/${PRGNAM}-linux-${VERSION}.tar.gz}
SOURCE="${CWD}/$(basename $SRCURL)"

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

cd $TMP
rm -rf ${PRGNAM}-${VERSION}



dnl() {
    SOURCE=$1
    SRCURL=$2
    if [ ! -e $SOURCE ]; then
       XSOURCE="$(dirname ${SOURCE})/$(basename ${SRCURL})"
       if [ ! -e $XSOURCE ]; then
           if ! [ "x${SRCURL}" == "x" ]; then
             echo "Downloading '$(basename ${SOURCE})'."
             wget --no-check-certificate -nv -T 30 -O "${SOURCE}" "${SRCURL}" || true
             if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
                echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
                mv -f "${SOURCE}" "${SOURCE}.FAIL"
                exit 1
             fi
           else
             echo "File '${SOURCE}' not available... aborting the build."
             exit 1
           fi
       else
            mv $XSOURCE $SOURCE
       fi
    fi
}

check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}


if [ -e $CWD/slack-required ]; then
    IFS=$'\n'
    for REQ in `cat $CWD/slack-required`; do
        pkgs=(`echo $REQ| tr "|" "\n"`)
        for pkg in "${!pkgs[@]}"; do
            search_for=$(echo -n "${pkgs[pkg]}"|sed -e 's/^ *//' -e 's/ *$//'|awk '{print $1}')
            check_installed ${search_for} || {
                unset "pkgs[pkg]"
            }
        done
        if [ 0 = ${#pkgs[@]} ]; then
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
        fi
    done
    unset IFS
fi


if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi



dnl "$SOURCE" "$SRCURL"

tar zxf $SOURCE

cd $PRGNAM-linux$SRCSUFFIX

chown -R root:root .
find . \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 400 -o -perm 440 \) -exec chmod 644 {} \; -o \
 \( -perm 777 -o -perm 775 -o -perm 511 -o -perm 711 -o -perm 555 \) -exec chmod 755 {} \;


mkdir -p $PKG/opt/$PKGNAM $PKG/usr/bin $PKG/usr/share/applications $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

cp -R * $PKG/opt/$PKGNAM

(
cat <<EOF
[Desktop Entry]
Name=Azure Data Studio
Comment=Data Management Tool that enables you to work with SQL Server, Azure SQL DB and SQL DW from Windows, macOS and Linux.
GenericName=Text Editor
Exec=/usr/bin/${PKGNAM} --unity-launch %F
Icon=/opt/${PKGNAM}/resources/app/resources/linux/code.png
Type=Application
StartupNotify=true
StartupWMClass=azuredatastudio
Categories=Utility;TextEditor;Development;IDE;
MimeType=text/plain;inode/directory;
Actions=new-empty-window;
Keywords=sqlops;

[Desktop Action new-empty-window]
Name=New Empty Window
Exec=/usr/bin/${PKGNAM} --new-window %F
Icon=/opt/${PKGNAM}/resources/app/resources/linux/code.png
EOF
) > $PKG/usr/share/applications/${PRGNAM}.desktop

cp -a $CWD/$PKGNAM.SlackBuild $CWD/slack-* $CWD/$PKGNAM.info \
   $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild/

ln -s /opt/$PKGNAM/bin/${PRGNAM} $PKG/usr/bin/$PKGNAM

( cd $PKG
  find . | xargs -0 file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs -0 file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs -0 file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

if [ ! -e $CWD/slack-required ] && [ -x "$(which requiredbuilder 2>/dev/null)" ]; then
  requiredbuilder -y -v -s $CWD $PKG
fi


[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
