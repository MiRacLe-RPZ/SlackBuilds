#!/bin/sh

# Slackware build script for ansible

# Copyright 2014 MiRacLe.RPZ <miracle@rpz.name>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO
#  EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
#  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
#  OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
#  OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
#  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=ansible
PKGNAM=$(basename $0 .SlackBuild)

VERSION=${VERSION:-1.5.4}
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}


if [ -z "$ARCH" ]; then
    case "$( uname -m )" in
        i?86) ARCH=i486 ;;
        arm*) ARCH=arm ;;
           *) ARCH=$(uname -m) ;;
    esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

SRCURL="https://github.com/ansible/${PRGNAM}/archive/v${VERSION}.tar.gz"
SOURCE="${CWD}/${PRGNAM}-${VERSION}.tar.gz"


if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}

if [ -e $CWD/slack-required ]; then
    for REQ in `cat $CWD/slack-required|cut -f 1 -d " "`;do
        check_installed "$REQ" || {
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
       }
    done
fi

if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi

dnl() {
    SOURCE=$1
    SRCURL=$2
    if [ ! -e $SOURCE ]; then
       if ! [ "x${SRCURL}" == "x" ]; then
         echo "Downloading '$(basename ${SOURCE})'."
         wget --no-check-certificate -nv -T 30 -O "${SOURCE}" "${SRCURL}" || true
         if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
            echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
            mv -f "${SOURCE}" "${SOURCE}.FAIL"
            exit 1
         fi
         else
             echo "File '${SOURCE}' not available... aborting the build."
             exit 1
         fi
    fi
    if [ -r "${CWD}/${PKGNAM}.info" ]; then
        . "${CWD}/${PKGNAM}.info"
        CHECKSUM=`md5sum ${SOURCE}|cut -d' ' -f1`
        if [ "x${CHECKSUM}" != "x${MD5SUM}" ]; then
            echo "Checksum for ${SOURCE} failed"
            exit 1
        fi
    fi
}


set -e

dnl "${SOURCE}" "${SRCURL}"

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION
tar xvf $CWD/$PRGNAM-$VERSION.tar.?z*
cd $PRGNAM-$VERSION
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
 -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

make docs
python setup.py install $SLKFLAGS --root=$PKG

rm -r docs/man/man1/*asciidoc.in
cp -a docs/man $PKG/usr/man
find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done


find $PKG/usr/man -iname '.git*' -delete

find $PKG/usr/share/ansible -type f -perm /111 -exec chmod -x {} \;

orig_path="/usr/share/ansible_plugins"
site_packages="$(python2 -c 'from distutils.sysconfig import get_python_lib; print get_python_lib();')/ansible"
plug_pat='(action|filter|connection|lookup)'
sed -i -r \
    -e "s:$orig_path/${plug_pat}_plugins:$site_packages/runner/\1_plugins:" \
    -e "s:$orig_path/callback_plugins:$site_packages/callback_plugins:" \
    -e "s:$orig_path/vars_plugins:$site_packages/inventory/vars_plugins:" \
    -e "7,12d" \
    examples/ansible.cfg

mkdir -p $PKG/etc/ansible
cp -a examples/ansible.cfg $PKG/etc/ansible/ansible.cfg.new
cp -a examples/hosts $PKG/etc/ansible/hosts.new

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION
cp -a \
    examples COPYING RELEASES.txt *.md \
    $PKG/usr/doc/$PKGNAM-$VERSION

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

cp -a $CWD/$PKGNAM.SlackBuild $CWD/doinst.sh $CWD/slack-* $CWD/$PKGNAM.info \
    $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

mkdir -p $PKG/install

cp -a $CWD/slack-* $CWD/doinst.sh \
    $PKG/install

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
