#!/bin/sh

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

PRGNAM=PhpStorm
PKGNAM=$(basename $0 .SlackBuild)
INFOFILE="$(pwd)/${PKGNAM}.info"
if [ -f $INFOFILE ]; then
    source $INFOFILE
fi
VERSION=${VERSION:-202.6397.115}
SRCVER="2020.2"
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi


CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}


SRCURL=${DOWNLOAD:-https://download-cf.jetbrains.com/webide/${PRGNAM}-${SRCVER}.tar.gz}
SOURCE="${CWD}/$(basename $SRCURL)"


rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT

cd $TMP
rm -rf ${PRGNAM}-${VERSION}



dnl() {
    SOURCE=$1
    SRCURL=$2
    if [ ! -e $SOURCE ]; then
       if ! [ "x${SRCURL}" == "x" ]; then
         echo "Downloading '$(basename ${SOURCE})'."
         wget --no-check-certificate -nv -T 30 -O "${SOURCE}" "${SRCURL}" || true
         if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
            echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
            mv -f "${SOURCE}" "${SOURCE}.FAIL"
            exit 1
         fi
         else
             echo "File '${SOURCE}' not available... aborting the build."
             exit 1
         fi
    fi
    if ! [ "x${MD5SUM}" == "x" ]; then
        CHECKSUM=`md5sum ${SOURCE}|cut -d' ' -f1`
        if [ "x${CHECKSUM}" != "x${MD5SUM}" ]; then
            echo "Checksum mismatch: expected - ${MD5SUM}, actual - ${CHECKSUM}"
            exit 1
        fi
    fi
}

check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}


if [ -e $CWD/slack-required ]; then
    IFS=$'\n'
    for REQ in `cat $CWD/slack-required`; do
        pkgs=(`echo $REQ| tr "|" "\n"`)
        for pkg in "${!pkgs[@]}"; do
            search_for=$(echo -n "${pkgs[pkg]}"|sed -e 's/^ *//' -e 's/ *$//'|awk '{print $1}')
            check_installed ${search_for} || {
                unset "pkgs[pkg]"
            }
        done
        if [ 0 = ${#pkgs[@]} ]; then
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
        fi
    done
    unset IFS
fi


if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi



dnl "$SOURCE" "$SRCURL"

tar zxf $SOURCE

cd $PRGNAM-$VERSION

chown -R root:root .
find . \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 400 -o -perm 440 \) -exec chmod 644 {} \; -o \
 \( -perm 777 -o -perm 775 -o -perm 511 -o -perm 711 -o -perm 555 \) -exec chmod 755 {} \;


mkdir -p $PKG/opt/$PKGNAM $PKG/usr/bin $PKG/usr/share/applications $PKG/usr/share/pixmaps $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

cp -R * $PKG/opt/$PKGNAM

rm -rf $PKG/opt/$PKGNAM/lib/libpty/{macosx,win}
rm -f $PKG/opt/$PKGNAM/help/*ForMac*

rm -f $PKG/opt/$PKGNAM/bin/fsnotifier-arm

if [ "$ARCH" = "x86_64" ]; then
    rm -f $PKG/opt/$PKGNAM/bin/libyjpagent-linux.so
    rm -f $PKG/opt/$PKGNAM/bin/fsnotifier
    rm -f $PKG/opt/$PKGNAM/bin/phpstorm.vmoptions
    rm -rf $PKG/opt/$PKGNAM/lib/libpty/linux/x86
else
    rm -f $PKG/opt/$PKGNAM/bin/libyjpagent-linux64.so
    rm -f $PKG/opt/$PKGNAM/bin/fsnotifier64
    rm -f $PKG/opt/$PKGNAM/bin/phpstorm64.vmoptions
    rm -rf $PKG/opt/$PKGNAM/lib/libpty/linux/x86_64
fi

(
cat <<EOF
[Desktop Entry]
Version=${VERSION}
Name=PhpStorm
Icon=${PKGNAM}
GenericName=PhpStorm
Comment=PHP IDE based on JetBrain's IDEA, trial version
Exec=/opt/${PKGNAM}/bin/phpstorm.sh
Terminal=false
Type=Application
Categories=Development;IDE;
StartupNotify=true
StartupWMClass=PhpStorm
EOF
) > $PKG/usr/share/applications/phpstorm.desktop

cp $PKG/opt/$PKGNAM/bin/$PKGNAM.png $PKG/usr/share/pixmaps/$PKGNAM.png

cp -a Install-Linux-tar.txt \
  $PKG/usr/doc/$PKGNAM-$VERSION

# [ -e $PKG/opt/$PKGNAM/license ] && rm -rf $PKG/opt/$PKGNAM/license
[ -e $PKG/opt/$PKGNAM/Install-Linux-tar.txt ] && rm -f $PKG/opt/$PKGNAM/Install-Linux-tar.txt
[ -e $PKG/opt/$PKGNAM/build.txt ] && rm -f $PKG/opt/$PKGNAM/build.txt


cp -a $CWD/$PKGNAM.SlackBuild $CWD/slack-desc \
   $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild/

ln -s /opt/$PKGNAM/bin/phpstorm.sh $PKG/usr/bin/$PKGNAM

( cd $PKG
  find . | xargs -0 file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs -0 file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs -0 file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

if [ ! -e $CWD/slack-required ] && [ -x "$(which requiredbuilder 2>/dev/null)" ]; then
  requiredbuilder -y -v -s $CWD $PKG
fi


[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
