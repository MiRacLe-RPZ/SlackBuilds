#!/bin/sh

# Slackware build script for gearmand
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=gearmand
PKGNAM=$(basename $0 .SlackBuild)
VERSION=1.1.18
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}

SOURCE="${PRGNAM}-${VERSION}.tar.gz"
SRCURL="https://github.com/gearman/${PRGNAM}/releases/download/${VERSION}/${PRGNAM}-${VERSION}.tar.gz"

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

NUMJOBS=${NUMJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}


check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}

if [ -e $CWD/slack-required ]; then
    for REQ in `cat $CWD/slack-required|cut -f 1 -d " "`;do
        check_installed "$REQ" || {
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
       }
    done
fi

if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi



dnl() {
    SOURCE=$1
    SRCURL=$2
    if [ ! -e $SOURCE ]; then
       if ! [ "x${SRCURL}" == "x" ]; then
         echo "Downloading '$(basename ${SOURCE})'."
         wget --no-check-certificate -nv -T 30 -O "${SOURCE}" "${SRCURL}" || true
         if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
            echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
            mv -f "${SOURCE}" "${SOURCE}.FAIL"
            exit 1
         fi
         else
             echo "File '${SOURCE}' not available... aborting the build."
             exit 1
         fi
    fi
}


set -eu

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION

SOURCE="${CWD}/${SOURCE}"

dnl "${SOURCE}" $SRCURL

tar zxf $SOURCE

cd $PRGNAM-$VERSION

chown -R root:root .
chmod -R u+w,go+r-w,a-s .

LDFLAGS="-L/usr/lib$LIBDIRSUFFIX" \
CFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --libdir=/usr/lib${LIBDIRSUFFIX} \
  --sysconfdir=/etc/gearman \
  --localstatedir=/var \
  --mandir=/usr/man \
  --enable-static=no \
  --build=$ARCH-slackware-linux

make -j$NUMJOBS
make install-strip DESTDIR=$PKG

find $PKG/usr/man -type f -exec gzip -9 {} \;
for i in $(find $PKG/usr/man -type l) ; do ln -s $(readlink $i).gz $i.gz ; rm $i ; done

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild
cp -a ChangeLog AUTHORS COPYING HACKING THANKS \
    $PKG/usr/doc/$PKGNAM-$VERSION
cp -a $CWD/$PKGNAM.SlackBuild $CWD/slack-* $CWD/doinst.sh $CWD/rc.gearmand \
    $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

mkdir -p $PKG/etc/rc.d/
cp $CWD/rc.gearmand $PKG/etc/rc.d/rc.gearmand.new

mkdir -p $PKG/install
cp -a $CWD/slack-* $CWD/doinst.sh \
    $PKG/install/

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE}
