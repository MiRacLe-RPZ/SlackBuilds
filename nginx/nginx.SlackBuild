#!/bin/sh

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

PRGNAM=nginx
PKGNAM=$(basename $0 .SlackBuild)
VERSION=${VERSION:-1.2.3}
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}

NGINXUSER=${NGINXUSER:-apache}
NGINXGROUP=${NGINXGROUP:-apache}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

SOURCE="http://nginx.org/download/${PKGNAM}-${VERSION}.tar.gz"

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

CPUCOUNT="$(lscpu|grep 'CPU(s):'|awk '{print $2}')"
NUMJOBS=" -j$(echo $CPUCOUNT|awk '{print $1 + 1}') "



CHOST="i486"
if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
  CHOST="x86_64"
fi


rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${PRGNAM}-${VERSION}



rm -rf $TMP
mkdir -p $TMP $PKG $OUTPUT
cd $TMP

if [ ! -e $CWD/$PRGNAM-$VERSION.tar.gz ];then
  wget $SOURCE -O $CWD/$PRGNAM-$VERSION.tar.gz
fi

tar xvf $CWD/$PRGNAM-$VERSION.tar.gz
cd $PRGNAM-$VERSION

chown -R root:root .
find . \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 400 -o -perm 440 \) -exec chmod 644 {} \; -o \
 \( -perm 777 -o -perm 775 -o -perm 511 -o -perm 711 -o -perm 555 \) -exec chmod 755 {} \;


CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr \
  --sbin-path=/usr/sbin/nginx \
  --conf-path=/etc/nginx/nginx.conf \
  --pid-path=/var/run/nginx.pid \
  --lock-path=/var/lock/nginx \
  --user=${NGINXUSER} \
  --group=${NGINXGROUP} \
  --error-log-path=/var/log/nginx/error.log \
  --http-log-path=/var/log/nginx/access.log \
  --with-http_realip_module \
  --with-http_gzip_static_module \
  --with-http_secure_link_module \
  --with-http_stub_status_module \
  --http-client-body-temp-path=/tmp/nginx/client_body \
  --http-proxy-temp-path=/tmp/nginx/proxy \
  --http-fastcgi-temp-path=/dev/shm && \
make $NUMJOBS && \
make install DESTDIR=$PKG

mkdir -p $PKG/etc/rc.d $PKG/etc/nginx/conf.d $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild
cat $CWD/rc.nginx|sed "s|apache:apache|${NGINXUSER}:${NGINXGROUP}|" > $PKG/etc/rc.d/rc.nginx.new

mkdir -p $PKG/etc/logrotate.d
cat $CWD/nginx.logrotate > $PKG/etc/logrotate.d/nginx


for file in fastcgi_params fastcgi.conf mime.types \
            koi-utf koi-win scgi_params uwsgi_params win-utf ; do
            mv $PKG/etc/nginx/$file $PKG/etc/nginx/$file.new ;
done

rm -f $PKG/etc/nginx/nginx.conf
cat $CWD/nginx.conf|sed "s|worker_processes  1;|worker_processes  ${CPUCOUNT};|" > $PKG/etc/nginx/nginx.conf.new

mkdir -p $PKG/var/log/nginx
chown $NGINXUSER:$NGINXGROUP $PKG/var/log/nginx
chmod 750 $PKG/var/log/nginx

cp -r \
  CHANGES* LICENSE README \
  $PKG/usr/doc/$PKGNAM-$VERSION

for i in $CWD/doinst.sh $CWD/nginx.SlackBuild $CWD/nginx.conf $CWD/nginx.logrotate $CWD/rc.nginx $CWD/slack-*; do
  cp -a $i $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild/
done

if [ -d $PKG/usr/man ]; then
    ( cd $PKG/usr/man
      find . -type f -exec gzip -9 {} \;
      for i in $( find . -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    )
fi

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
  find . | xargs file | grep "current ar archive" | cut -f 1 -d : | xargs -r strip --strip-unneeded 2> /dev/null || true
)

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

if [ -x "$(which requiredbuilder 2>/dev/null)" ];then
  requiredbuilder -y -v -s $CWD $PKG
fi

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
