#! /bin/sh

php_fpm_BIN=/usr/sbin/php-fpm
php_fpm_CONF=/etc/php54/php-fpm.conf
php_fpm_PID=/var/run/php-fpm.pid
php_fpm_USER=apache

php_opts="--fpm-config $php_fpm_CONF"



mk_tempdir () {

    if [ ! -d "$1" ]; then
	mkdir -p "$1"
	chmod 0770 "$1"
	chown root:${php_fpm_USER} "$1"
    fi    
}

wait_for_pid () {
	try=0

	while test $try -lt 35 ; do

		case "$1" in
			'created')
			if [ -f "$2" ] ; then
				try=''
				break
			fi
			;;

			'removed')
			if [ ! -f "$2" ] ; then
				try=''
				break
			fi
			;;
		esac

		echo -n .
		try=`expr $try + 1`
		sleep 1

	done

}

case "$1" in
	start)
		mk_tempdir /tmp/php54/php
		mk_tempdir /tmp/php54/upload
		mk_tempdir /tmp/php54/sessions
		
		echo -n "Starting php-fpm "

		TEMP=/tmp/php54/php TMP=/tmp/php54/php $php_fpm_BIN $php_opts

		if [ "$?" != 0 ] ; then
			echo " failed"
			exit 1
		fi

		wait_for_pid created $php_fpm_PID

		if [ -n "$try" ] ; then
			echo " failed"
			exit 1
		else
			echo " done"
		fi
	;;

	stop)
		echo -n "Gracefully shutting down php-fpm "

		if [ ! -r $php_fpm_PID ] ; then
			echo "warning, no pid file found - php-fpm is not running ?"
			exit 1
		fi

		kill -QUIT `cat $php_fpm_PID`

		wait_for_pid removed $php_fpm_PID

		if [ -n "$try" ] ; then
			echo " failed. Use force-quit"
			exit 1
		else
			echo " done"
		fi
	;;

	force-quit)
		echo -n "Terminating php-fpm "

		if [ ! -r $php_fpm_PID ] ; then
			echo "warning, no pid file found - php-fpm is not running ?"
			exit 1
		fi

		kill -TERM `cat $php_fpm_PID`

		wait_for_pid removed $php_fpm_PID

		if [ -n "$try" ] ; then
			echo " failed"
			exit 1
		else
			echo " done"
		fi
	;;

	restart)
		$0 stop
		$0 start
	;;

	reload)

		echo -n "Reload service php-fpm "

		if [ ! -r $php_fpm_PID ] ; then
			echo "warning, no pid file found - php-fpm is not running ?"
			exit 1
		fi

		kill -USR2 `cat $php_fpm_PID`

		echo " done"
	;;
	logrotate)
		echo -n "Rotate logs for service php-fpm "
		if [ ! -r $php_fpm_PID ] ; then
			echo "warning, no pid file found - php-fpm is not running ?"
			exit 1
		fi

		kill -USR1 `cat $php_fpm_PID`

		echo " done"
	;;
	*)
		echo "Usage: $0 {start|stop|force-quit|restart|reload|logrotate}"
		exit 1
	;;

esac
