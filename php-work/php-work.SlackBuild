#!/bin/sh

# Slackware build script for php configured with required extensions needed for my work

# Copyright 2012  MiRacLe.RPZ <miracle@rpz.name>
# All rights reserved.
#
#   Permission to use, copy, modify, and distribute this software for
#   any purpose with or without fee is hereby granted, provided that
#   the above copyright notice and this permission notice appear in all
#   copies.
#
#   THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
#   WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
#   IN NO EVENT SHALL THE AUTHORS AND COPYRIGHT HOLDERS AND THEIR
#   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
#   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
#   USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
#   ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#   OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
#   OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
#   SUCH DAMAGE.

PRGNAM=php
PKGNAM=$(basename $0 .SlackBuild)
VERSION=${VERSION:-0.9.1}
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}
INI=$(php -i 2>/dev/null|grep 'Scan this dir for additional .ini files'|awk '{print $NF}')

DAEMONUSER=${DAEMONUSER:-apache}
DAEMONGROUP=${DAEMONGROUP:-apache}

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

NUMJOBS=" -j$(lscpu|grep 'CPU(s):'|awk '{print $2 + 1}') "

set -e
trap 'echo "$0 FAILED at line $LINENO!" | tee $OUTPUT/error-${PKGNAM}.log' ERR
set -u

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${PRGNAM}-${VERSION}



check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}

if [ -e $CWD/slack-required ]; then
    for REQ in `cat $CWD/slack-required|cut -f 1 -d " "`;do
        check_installed "$REQ" || {
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
       }
    done
fi

if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi

mkdir -p $PKG/etc/rc.d
cat $CWD/rc.php-fpm | sed "s|php_fpm_USER=apache|php_fpm_USER=${DAEMONUSER}|" > $PKG/etc/rc.d/rc.php-fpm.new

mkdir -p ${PKG}/${INI}
cat $CWD/php-cli.ini | sed "s|/usr/lib/php/extensions|/usr/lib${LIBDIRSUFFIX}/php/extensions|" > ${PKG}/${INI}/php-cli.ini.new
cat $CWD/php-fpm.conf |sed "s|user = apache|user = ${DAEMONUSER}|" |sed "s|group = apache|group = ${DAEMONGROUP}|"  > ${PKG}/${INI}/php-fpm.conf.new

mkdir -p $PKG/usr/bin
cp -a $CWD/php-lint $CWD/php-ini \
   $PKG/usr/bin/

mkdir -p $PKG/etc/cron.hourly
cp $CWD/php-sessiongc $PKG/etc/cron.hourly/php-sessiongc.new

mkdir -p $PKG/etc/logrotate.d
cat $CWD/php.logrotate > $PKG/etc/logrotate.d/php

mkdir -p $PKG/var/log/php
mkdir -p $PKG/tmp/php
mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild


mkdir -p $PKG/install
cat $CWD/slack-desc |sed "s|php-work:|${PKGNAM}:|" > $PKG/install/slack-desc
cat $CWD/slack-required > $PKG/install/slack-required
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cp -a \
    $CWD/$PKGNAM.SlackBuild $CWD/slack-* $CWD/*.ini $CWD/rc.* $CWD/php-* $CWD/doinst.sh $CWD/monit.* \
    $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild


if [ ! -e $CWD/slack-required ] && [ -x "$(which requiredbuilder 2>/dev/null)" ]; then
  requiredbuilder -y -v -s $CWD $PKG
fi


cd $PKG
/sbin/makepkg -p -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE |tee -a $OUTPUT/$PKGNAM-makepkg.log


cd $OUTPUT
md5sum $PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz} >  $PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE.md5
cat $PKG/install/slack-desc | grep "^${PKGNAM}" > $PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE.txt


rm -f "${OUTPUT}/${PKGNAM}-*.log"|tee -a $OUTPUT/${PKGNAM}-cleanup.log > /dev/null

cd $CWD

exit 0