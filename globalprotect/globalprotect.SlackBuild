#!/bin/sh

PRGNAM="PanGPLinux"
PKGNAM=$(basename $0 .SlackBuild)

INFOFILE="$(pwd)/${PKGNAM}.info"
if [ -f $INFOFILE ]; then
    source $INFOFILE
fi



VERSION=${VERSION:-5.2.5}
SRCURL=${DOWNLOAD}
SOURCE=$(basename $SRCURL)

PATCH=$(basename $SOURCE .tgz|cut -d "c" -f2)

BUILD=${BUILD:-$PATCH}
TAG=${TAG:-_rpz}

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}
NUMJOBS=${NUMJOBS:-$(( $(getconf _NPROCESSORS_ONLN) + 1 ))}



if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi



if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION

check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}

if [ -e $CWD/slack-required ]; then
    for REQ in `cat $CWD/slack-required|cut -f 1 -d " "`;do
        check_installed "$REQ" || {
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
       }
    done
fi

if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi
SOURCE=${CWD}/${SOURCE}

tar -xvf ${SOURCE} ./GlobalProtect_UI_tar-${VERSION}.0-${PATCH}.tgz

SOURCE=GlobalProtect_UI_tar-${VERSION}.0-${PATCH}.tgz
mkdir $PRGNAM-$VERSION
cd $PRGNAM-$VERSION
tar xvf ../${SOURCE}
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;


find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

mkdir -p $PKG/opt/paloaltonetworks/globalprotect

cp -f globalprotect PanGPA PanGPS PanGPUI PanGpHip PanGpHipMp $PKG/opt/paloaltonetworks/globalprotect/
cp -df *.so* $PKG/opt/paloaltonetworks/globalprotect/
cp -f license.cfg $PKG/opt/paloaltonetworks/globalprotect/
#cp -f pangps.xml $PKG/opt/paloaltonetworks/globalprotect/

mkdir -p $PKG/usr/share/applications/

(
cat <<EOF
[Desktop Entry]
Version=${VERSION}
Name=${PKGNAM}
GenericName=PanGPUI
Icon=network-vpn
Exec=/opt/paloaltonetworks/globalprotect/PanGPUI
Terminal=false
Type=Application
Categories=Network;VPN;
StartupNotify=false
EOF
) > $PKG/usr/share/applications/${PKGNAM}.desktop

mkdir -p $PKG/usr/bin
(cd $PKG/usr/bin; ln -s ../../opt/paloaltonetworks/globalprotect/globalprotect globalprotect)

mkdir -p $PKG/usr/share/man/man1
cp -f globalprotect.1.gz $PKG/usr/share/man/man1


mkdir -p $PKG/etc/rc.d
cp $CWD/rc.${PKGNAM} $PKG/etc/rc.d/rc.${PKGNAM}.new

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

cp -a \
  ${CWD}/${PKGNAM}.SlackBuild ${CWD}/${PKGNAM}.info ${CWD}/doinst.sh ${CWD}/rc.${PKGNAM} ${CWD}/slack-desc \
  ${PKG}/usr/doc/$PKGNAM-$VERSION/SlackBuild


mkdir -p $PKG/install
cp -a $CWD/slack-desc ${CWD}/doinst.sh \
  ${PKG}/install

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}
