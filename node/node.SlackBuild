#!/bin/sh

# Slackware build script for node

PRGNAM=node
PKGNAM=$(basename $0 .SlackBuild)
VERSION=${VERSION:-0.8.14}
BUILD=${BUILD:-1}
TAG=${TAG:-_rpz}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
fi

NUMJOBS=" -j$(lscpu|grep 'CPU(s):'|awk '{print $2 + 1}') "

set -eu

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-v$VERSION
if [ ! -e $CWD/$PRGNAM-v$VERSION.tar.gz ]; then
    wget "http://nodejs.org/dist/v$VERSION/$PRGNAM-v$VERSION.tar.gz" -O "$CWD/$PRGNAM-v$VERSION.tar.gz"
fi
tar xvf $CWD/$PRGNAM-v$VERSION.tar.gz
cd $PRGNAM-v$VERSION


chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;




# Fix man page path.
#sed -i 's|/share||' wscript
sed -i '/var manRoot/ s/"share",//' deps/npm/lib/{,un}build.js

# Make `npm help' to look for gzipped man pages.
sed -i 's/\." + num/." + num + ".gz"/' deps/npm/lib/help.js

# Fix libdir for 64-bit.
#sed -i "s|/lib/|/lib${LIBDIRSUFFIX}/|" wscript
sed -i "s|lib/|lib${LIBDIRSUFFIX}/|" tools/install.py
sed -i "s|share/man|man/|" tools/install.py
sed -i "s/'lib'/'lib${LIBDIRSUFFIX}'/" \
  lib/module.js tools/wafadmin/Tools/node_addon.py
sed -i "s|\"lib\"|\"lib${LIBDIRSUFFIX}\"|" deps/npm/lib/npm.js tools/node-waf

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
./configure \
  --prefix=/usr

make ${NUMJOBS}
make install DESTDIR=$PKG

find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

find $PKG/usr/man $PKG/usr/lib${LIBDIRSUFFIX}/node_modules/npm/man -type f -exec gzip -9 {} \;
for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done

# Add bash completion file for npm.
install -D -m 644 $CWD/npm.sh $PKG/etc/bash_completion.d/npm

# Remove unneeded files.
find $PKG/usr \( -name '.git*' -o -name '.travis.yml' \) -exec rm -f {} \;

# Set NODE_PATH to look for globally installed modules.
mkdir -p $PKG/etc/profile.d
cat > $PKG/etc/profile.d/node.csh << EOF
#!/bin/csh
setenv NODE_PATH /usr/lib${LIBDIRSUFFIX}/node_modules
EOF
cat > $PKG/etc/profile.d/node.sh << EOF
#!/bin/sh
export NODE_PATH=/usr/lib${LIBDIRSUFFIX}/node_modules
EOF
chmod 0755 $PKG/etc/profile.d/*

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild

cp -a AUTHORS ChangeLog LICENSE \
    $PKG/usr/doc/$PKGNAM-$VERSION

cp -a $CWD/$PKGNAM.SlackBuild $CWD/slack-* $CWD/npm.sh \
    $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild


mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG

chown root.root -R .

if [ ! -e $CWD/slack-required ] && [ -x "$(which requiredbuilder 2>/dev/null)" ]; then
  requiredbuilder -y -v -s $CWD $PKG
fi


/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.${PKGTYPE:-txz}



