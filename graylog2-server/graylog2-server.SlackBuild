#!/bin/sh

# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

set -e

PRGNAM=graylog2-server
PKGNAM=graylog2-server
VERSION=${VERSION:-0.20.1}
BUILD=${BUILD:-2}
TAG=${TAG:-_rpz}
PKGTYPE=${PKGTYPE:-txz}
ARCH="noarch"

GL_USER=${GL_USER:-graylog2}
GL_UID=${GL_UID:-311}
GL_GROUP=${GL_GROUP:-graylog2}
GL_GID=${GL_GID:-311}

ADMIN_PASSWORD=${ADMIN_PASSWORD:-yourpassword}

bailout() {
  printf "\n  You must have a \"${GL_USER}\" user and group in order to run this script.
  Add them with something like this:
     groupadd -g $GL_GID $GL_GROUP
     useradd -u $GL_UID -g $GL_GROUP -s /bin/false -d /usr/share/graylog2 $GL_USER\n"
  exit 1
}

# Check for graylog2 user and group availability
if ! getent group $GL_USER 2>&1 > /dev/null; then
  bailout ;
elif ! getent passwd $GL_USER 2>&1 > /dev/null; then
  bailout ;
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/rpz}
PKG=$TMP/package-$PKGNAM
OUTPUT=${OUTPUT:-/tmp}

SRCURL="https://github.com/Graylog2/graylog2-server/releases/download/${VERSION}/${PRGNAM}-${VERSION}.tgz"
SOURCE="${CWD}/${PRGNAM}-${VERSION}.tgz"


rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf ${PRGNAM}-${VERSION}




set -e

check_installed() {
    PACKAGE=${1}
    ls -1 /var/log/packages | grep "^${PACKAGE}-[^-]*-[^-]*-[^-]*$" >/dev/null 2>&1
    return $?
}

if [ -e $CWD/slack-required ]; then
    for REQ in `cat $CWD/slack-required|cut -f 1 -d " "`;do
        check_installed "$REQ" || {
           echo "${0##*/}: Required package '$REQ' not installed."
           exit 1
       }
    done
fi

if [ -e $CWD/slack-conflicts ]; then
    for REQ in `cat $CWD/slack-conflicts|cut -f 1 -d " "`;do
        ! check_installed "$REQ" || {
           echo "${0##*/}: Conflict package '$REQ' was installed."
           exit 1
       }
    done
fi


dnl() {
    SOURCE=$1
    SRCURL=$2
    if [ ! -e $SOURCE ]; then
       if ! [ "x${SRCURL}" == "x" ]; then
         echo "Downloading '$(basename ${SOURCE})'."
         wget --no-check-certificate -nv -T 30 -O "${SOURCE}" "${SRCURL}" || true
         if [ $? -ne 0 -o ! -s "${SOURCE}" ]; then
            echo "Downloading '$(basename ${SOURCE})' failed... aborting the build."
            mv -f "${SOURCE}" "${SOURCE}.FAIL"
            exit 1
         fi
         else
             echo "File '${SOURCE}' not available... aborting the build."
             exit 1
         fi
    fi
    if [ -r "${CWD}/${PKGNAM}.info" ]; then
        . "${CWD}/${PKGNAM}.info"
        CHECKSUM=`md5sum ${SOURCE}|cut -d' ' -f1`
        if [ "x${CHECKSUM}" != "x${MD5SUM}" ]; then
            echo "Checksum for ${SOURCE} failed"
            exit 1
        fi
    fi
}


dnl "${SOURCE}" "${SRCURL}"

cd $TMP

tar zxf $SOURCE

cd $PRGNAM-$VERSION

chown -R root:root .
find . \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 400 -o -perm 440 \) -exec chmod 644 {} \; -o \
 \( -perm 777 -o -perm 775 -o -perm 511 -o -perm 711 -o -perm 555 \) -exec chmod 755 {} \;


GRAYLOG_HOME=${PKG}/usr/share/graylog2/server

mkdir -p ${GRAYLOG_HOME}


cp -r plugin ${GRAYLOG_HOME}

cp graylog2-server.jar ${GRAYLOG_HOME}


mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION

cp -a README.markdown COPYING \
  $PKG/usr/doc/$PKGNAM-$VERSION

mkdir -p $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild/

cp -a $CWD/$PKGNAM.SlackBuild $CWD/slack-* $CWD/$PKGNAM.info $CWD/*.conf $CWD/rc.$PKGNAM \
   $PKG/usr/doc/$PKGNAM-$VERSION/SlackBuild/


mkdir -p $PKG/etc/graylog2/server

SECRET_PLACEHOLDER="##SECRET##"
SECRET=$(strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 96 | tr -d '\n'; echo)

SHA_PASSWORD_PLACEHOLDER="##SHA_PASSWORD##"
SHA_PASSWORD=$(echo -n $ADMIN_PASSWORD | shasum -a 256 |cut -d ' ' -f1)


cat $CWD/server.conf|sed -e "s/$SECRET_PLACEHOLDER/$SECRET/"|sed -e "s/$SHA_PASSWORD_PLACEHOLDER/$SHA_PASSWORD/"   > $PKG/etc/graylog2/server/server.conf.new

mkdir -p $PKG/etc/rc.d

cp -a $CWD/rc.graylog2-server \
    $PKG/etc/rc.d/rc.graylog2-server.new

cd $CWD

mkdir -p $PKG/install

cp -a slack-* \
  $PKG/install

[ -e $CWD/doinst.sh ] && cat $CWD/doinst.sh |sed -e "s/graylog2:graylog2/$GL_USER:$GL_GROUP/" > $PKG/install/doinst.sh

cd $PKG
chown -R root:root $PKG

/sbin/makepkg -l y -c n $OUTPUT/$PKGNAM-$VERSION-$ARCH-$BUILD$TAG.$PKGTYPE
